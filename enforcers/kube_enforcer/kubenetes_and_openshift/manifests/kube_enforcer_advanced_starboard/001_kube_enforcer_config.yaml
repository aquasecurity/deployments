apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: kube-enforcer-admission-hook-config
  namespace: aqua
webhooks:
  - name: imageassurance.aquasec.com
    failurePolicy: Ignore
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["pods", "deployments", "replicasets", "replicationcontrollers", "statefulsets", "daemonsets", "jobs", "cronjobs"]
    clientConfig:
      # Please follow instruction in document to generate new CA cert
      caBundle:
      service:
        namespace: aqua
        name: aqua-kube-enforcer
    timeoutSeconds: 5
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: kube-enforcer-me-injection-hook-config
  namespace: aqua
webhooks:
  - name: microenforcer.aquasec.com
    failurePolicy: Ignore
    clientConfig:
      service:
        name: aqua-kube-enforcer
        namespace: aqua
        path: "/mutate"
      caBundle:
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["*"]
        apiVersions: ["v1"]
        resources: ["pods"]
    timeoutSeconds: 5
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aqua-kube-enforcer-sa
  namespace: aqua
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aqua-kube-enforcer
rules:
  - apiGroups: ["*"]
    resources: ["pods", "nodes", "namespaces", "deployments", "statefulsets", "jobs", "cronjobs", "daemonsets", "replicasets", "replicationcontrollers", "clusterroles", "clusterrolebindings", "componentstatuses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [ "*" ]
    resources: [ "secrets" ]
    verbs: [ "get", "list", "watch", "update", "create" ]
  - apiGroups: ["aquasecurity.github.io"]
    resources: ["configauditreports"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["*"]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "update", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aqua-kube-enforcer
  namespace: aqua
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aqua-kube-enforcer
subjects:
  - kind: ServiceAccount
    name: aqua-kube-enforcer-sa
    namespace: aqua
---
# This role specific to kube-bench scans permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: aqua-kube-enforcer
  namespace: aqua
rules:
  - apiGroups: ["*"]
    resources: ["pods/log"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["*"]
    resources: ["jobs"]
    verbs: ["create", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: aqua-kube-enforcer
  namespace: aqua
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: aqua-kube-enforcer
subjects:
- kind: ServiceAccount
  name: aqua-kube-enforcer-sa
  namespace: aqua
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ke-envoy-conf
  namespace: aqua
data:
  # Enable the below Env for mTLS between kube-enforcer and gateway
  # AQUA_PUBLIC_KEY: "/opt/aquasec/ssl/aqua_kube-enforcer.crt"
  # AQUA_PRIVATE_KEY: "/opt/aquasec/ssl/aqua_kube-enforcer.key"
  # AQUA_ROOT_CA: "/opt/aquasec/ssl/rootCA.crt"
  envoy.yaml: |
    node:
      cluster: k8s
      id: <INSERT NODE ID>

    dynamic_resources:
      cds_config:
        path: /etc/aquasec/envoy/cds.yaml
        initial_fetch_timeout: 0s
      lds_config:
        path: /etc/envoy/lds.yaml
  lds.yaml: |
    resources:
      - "@type": type.googleapis.com/envoy.config.listener.v3.Listener
        name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 8443
        filter_chains:
          - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  stream_idle_timeout: 0s
                  drain_timeout: 20s
                  access_log:
                    - name: envoy.access_loggers.file
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                        path: "/dev/stdout"
                  codec_type: AUTO
                  stat_prefix: ingress_https
                  route_config:
                    name: local_route
                    virtual_hosts:
                      - name: https
                        domains:
                          - "*"
                        routes:
                          - match:
                              prefix: "/agent_grpc_channel.GWChannelV2/PushNotificationHandler"
                              grpc: { }
                            route:
                              cluster: aqua-kube-enforcer
                              timeout: 0s
                          - match:
                              prefix: "/"
                              grpc: { }
                            route:
                              cluster: aqua-gateway
                              timeout: 0s
                          - match:
                              prefix: "/"
                            route:
                              cluster: aqua-kube-enforcer-k8s
                              timeout: 0s

                  http_filters:
                    - name: envoy.filters.http.health_check
                      typed_config:
                        "@type": type.googleapis.com/envoy.config.filter.http.health_check.v2.HealthCheck
                        pass_through_mode: false
                        headers:
                          - name: ":path"
                            exact_match: "/healthz"
                          - name: "x-envoy-livenessprobe"
                            exact_match: "healthz"
                    - name: envoy.filters.http.router
                      typed_config: { }
            transport_socket:
              name: envoy.transport_sockets.tls
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                common_tls_context:
                  alpn_protocols: "h2,http/1.1"
                  tls_certificates:
                    - certificate_chain:
                        filename: "/etc/ssl/envoy/server.crt"
                      private_key:
                        filename: "/etc/ssl/envoy/server.key"
  cds.yaml: |
    resources:
    - "@type": type.googleapis.com/envoy.config.cluster.v3.Cluster
      name: aqua-kube-enforcer
      connect_timeout: 180s
      type: STRICT_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      http2_protocol_options:
        hpack_table_size: 4294967
        max_concurrent_streams: 2147483647
      circuit_breakers:
        thresholds:
          max_pending_requests: 2147483647
          max_requests: 2147483647
      load_assignment:
        cluster_name: aqua-kube-enforcer
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: localhost
                    port_value: 8442
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: aqua-kube-enforcer
    - "@type": type.googleapis.com/envoy.config.cluster.v3.Cluster
      name: aqua-kube-enforcer-k8s
      connect_timeout: 180s
      type: STRICT_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      circuit_breakers:
        thresholds:
          max_pending_requests: 2147483647
          max_requests: 2147483647
      load_assignment:
        cluster_name: aqua-kube-enforcer-k8s
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: localhost
                    port_value: 8449
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: aqua-kube-enforcer-k8s
    - "@type": type.googleapis.com/envoy.config.cluster.v3.Cluster
      name: aqua-gateway
      connect_timeout: 180s
      type: STRICT_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      http2_protocol_options:
        hpack_table_size: 4294967
        max_concurrent_streams: 2147483647
      circuit_breakers:
        thresholds:
          max_pending_requests: 2147483647
          max_requests: 2147483647
      load_assignment:
        cluster_name: aqua-gateway
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: aqua-gateway.aqua
                    port_value: 8443
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: aqua-gateway
  validation_context_sds_secret.yaml: |
    resources:
      - "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret"
        name: "validation_context_sds"
        validation_context:
          trusted_ca:
            filename: /etc/aquasec/envoy/ca-certificates.crt

---
# Starboard resource yamls################
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: configauditreports.aquasecurity.github.io
  labels:
    app.kubernetes.io/managed-by: starboard
spec:
  group: aquasecurity.github.io
  versions:
    - name: v1alpha1
      served: true
      storage: true
      additionalPrinterColumns:
        - jsonPath: .report.scanner.name
          type: string
          name: Scanner
          description: The name of the config audit scanner
        - jsonPath: .metadata.creationTimestamp
          type: date
          name: Age
          description: The age of the report
        - jsonPath: .report.summary.dangerCount
          type: integer
          name: Danger
          priority: 1
          description: The number of checks that failed with Danger status
        - jsonPath: .report.summary.warningCount
          type: integer
          name: Warning
          priority: 1
          description: The number of checks that failed with Warning status
        - jsonPath: .report.summary.passCount
          type: integer
          name: Pass
          priority: 1
          description: The number of checks that passed
      schema:
        openAPIV3Schema:
          x-kubernetes-preserve-unknown-fields: true
          type: object
  scope: Namespaced
  names:
    singular: configauditreport
    plural: configauditreports
    kind: ConfigAuditReport
    listKind: ConfigAuditReportList
    categories:
      - all
    shortNames:
      - configaudit
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: starboard-operator
  namespace: aqua
imagePullSecrets:
  - name: aqua-registry
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: starboard
  namespace: aqua
data:
  configAuditReports.scanner: Conftest
  conftest.imageRef: registry.aquasec.com/kube-enforcer:6.2
---
apiVersion: v1
kind: Secret
metadata:
  name: starboard
  namespace: aqua
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: starboard-conftest-config
  namespace: aqua
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: starboard-operator
  namespace: aqua
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
      - replicationcontrollers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - "nodes"
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
      - serviceaccounts
    verbs:
      - list
      - watch
      - get
      - create
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - apps
    resources:
      - replicasets
      - statefulsets
      - daemonsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - aquasecurity.github.io
    resources:
      - vulnerabilityreports
      - configauditreports
      - ciskubebenchreports
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: starboard-operator
  namespace: aqua
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: starboard-operator
subjects:
  - kind: ServiceAccount
    name: starboard-operator
    namespace: aqua
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: starboard-operator
  namespace: aqua
  labels:
    app: starboard-operator
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: starboard-operator
  template:
    metadata:
      labels:
        app: starboard-operator
    spec:
      serviceAccountName: starboard-operator
      automountServiceAccountToken: true
      securityContext: {}
      containers:
        - name: operator
          image: docker.io/aquasec/starboard-operator:0.10.1
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          env:
            - name: OPERATOR_NAMESPACE
              value: aqua
            - name: OPERATOR_TARGET_NAMESPACES
              value: ""
            - name: OPERATOR_LOG_DEV_MODE
              value: "false"
            - name: OPERATOR_CONCURRENT_SCAN_JOBS_LIMIT
              value: "10"
            - name: OPERATOR_SCAN_JOB_RETRY_AFTER
              value: 30s
            - name: OPERATOR_METRICS_BIND_ADDRESS
              value: :8080
            - name: OPERATOR_HEALTH_PROBE_BIND_ADDRESS
              value: :9090
            - name: OPERATOR_CIS_KUBERNETES_BENCHMARK_ENABLED
              value: "false"
            - name: OPERATOR_VULNERABILITY_SCANNER_ENABLED
              value: "false"
            - name: OPERATOR_BATCH_DELETE_LIMIT
              value: "10"
            - name: OPERATOR_BATCH_DELETE_DELAY
              value: "10s"
          ports:
            - name: metrics
              containerPort: 8080
            - name: probes
              containerPort: 9090
          readinessProbe:
            httpGet:
              path: /readyz/
              port: probes
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz/
              port: probes
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
---
